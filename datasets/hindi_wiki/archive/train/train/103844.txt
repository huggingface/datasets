संगणक संचिका एकत्रित जानकारी का एक वर्ग है, या जानकारी को संचित करने के लिए एक संसाधन है जो कि किसी संगणक कार्यक्रम को उपलब्ध होता है और आमतौर पर यह किसी प्रकार की टिकाऊ संगणक भंडारण पर आधारित होता है। संचिका टिकाऊ इस लिहाज़ से होती है कि यह मौजूदा कार्यक्रम के समाप्त होने के बाद भी अन्य कार्यक्रमों द्वारा इस्तेमाल के लिए मौजूद रहती है। संगणक संचिकाओं को पारंपरिक रूप से दफ़्तरों और पुस्तकालयों के फ़ाइलों में मौजूद कागज़ के दस्तावेज़ों का आधुनिक रूप माना जा सकता है, इसीलिए अंग्रेज़ी में इसका नाम फ़ाइल पड़ा है।
न्यूनतम स्तर पर कई आधुनिक प्रचालन प्रणालियाँ संचिकाओं को केवल एक-आयामी बाइटों की शृंखला ही मानती हैं। अधिक उच्च स्तर पर, जब संचिका की सामग्री को भी मद्देनज़र रखा जा रहा हो, तो ये द्विलवीय अंक पूर्णाक, अक्षर, छवि पिक्सेल, ध्वनि या किसी और चीज़ का प्रतिनिधित्व करते हुए माने जा सकते हैं। यह संचिका का इस्तेमाल करने वाले कार्यक्रम पर निर्भर है कि वह किस प्रकार संचिका का अर्थ निकालता है और जानकारी के आंतरिक जमाव को कैसे समझता है, ताकि प्रयोक्ता को और अधिक मायने रखने वाली शैली में इसी जानकारी को प्रस्तुत कर सके ।
किसी भी समय पर संचिका का एक आकार होगा, आमतौर पर यह बाइटों में अभिव्यक्त किया जाता है और यह दर्शाता है कि इस संचिका ने भंडार में कितनी जगह घेरी हुई है। अधिकतर आधुनिक प्रचालन प्रणालियों में यह आकार कोई भी अऋणात्मक पूर्णांक हो सकता है, लेकिन प्रणाली के अनुसार इसकी अधिकतम सीमा होगी। लेकिन संचिका की साधारण परिभाषा यह लाज़िमी नहीं ठहराती है कि उसके मौजूदा आकार का कोई वास्तविक अर्थ हो, सिवाय उस मामले में जब संचिका की सामग्री, एक दृढ संग्रह के समूह के अंदर की कुछ सामग्री हो।
उदाहरण के लिए किसी यूनिक्स-समान प्रणाली में जिस संचिका की ओर /bin/ls की कड़ी इंगित करती है, उसका आकार परिभाषित होता है और विरले ही बदलता है। इसकी तुलना /dev/null से करें तो यह भी एक संचिका है पर इसका आकार हमेशा बदलता रहता है बल्कि शायद उस तरह मायने ही नहीं रखता है जैसे पिछले उदाहरण का मायने रखता है।
किसी संगणक संचिका में मौजूद जानकारी और छोटी जानकारियों के पुलिंदों के रूप में हो सकती है या चलनीय भी हो सकती है।
यह मात्र संचिका के रचनाकार पर निर्भर है कि उसमें जानकारी का आयोजन किस प्रकार किया जाएगा। इस कारण से अनेकों कम मानक वाली संचिका ढाँचे मौजूद हैं जो सरलतम से जटिलतम तक हर प्रकार के मकसद के लिए काम आ सकते हैं। अधिकतर संगणक संचिकाओँ का इस्तेमाल संगणक कार्यक्रम करते हैं। ये कार्यक्रम अपने इस्तेमाल के लिए यथोचित संचिकाएँ बनाते, बदलते व मिटाते हैं। जो कार्यक्रम-निर्माता इन कार्यक्रमों को बनाते हैं, वही फ़ैसला करते हैं कि कौन सी फ़ाइलों की ज़रूरत है, उनका इस्तेमाल कैसे होना है और उनके नाम भी वे निर्धारित करते हैं।
कुछ मामलों में संगणक कार्यक्रम संचिकाओं में हेर फ़ेर इस ढंग से करते हैं कि वे संगणक प्रयोक्ता को दिखती हैं। उदाहरण के लिए शब्द-संसाधन कार्क्रम में प्रयोक्ता दस्तावेज़ संचिकाओं में बदलाव करते हैं और प्रयोक्ता खुद ही उन्हें नाम भी देते हैं। दस्तावेज़ संचिका की सामग्री इस तरह आयोजित होती है कि शब्द-संसाधन कार्यक्रम को वह समझ में आ जाए, लेकिन प्रयोक्ता ही उसका नाम व भंडारण पता निर्धारित करता है और भंडारण की प्रमुख जानकारी भी प्रयोक्ता ही निर्धारित करता है।
कई अनुप्रयोग सभी सामग्री संचिकाओं को एक ही संचिका में घुसेड़ देते हैं और अलग अलग प्रकार की जानकारी का हिसाब रखने के लिए अंदर ही निशान लगा के रखते हैं। डूम और क्वेक जैसे खेलों की सामग्री संचिकाएँ इसका एक उदाहरण हैं।
संगणक पर, संचिकाओँ को बनाना, बदलना, बढ़ाना, छोटा करना, स्थानांतरित करना और मिटाना संभव है। अधिकतर मामलों में, संगणक कार्यक्रमों को संगणक पर चला कर यह सब किया जाता है, पर ज़रूरत हो तो संगणक का प्रयोक्ता भी संचिकाओं में बदलाव कर सकता है। उदाहरण के लिए, माइक्रोसॉफ्ट वर्ड की संचिकाएँ आमतौर पर प्रयोक्ता के निर्देशों के आधार पर माइक्रोसाफ़्ट वर्ड कार्यक्रम द्वारा बनाई जाती हैं, लेकिन प्रयोक्ता इन संचिकाओं को सीधे ही विंडोज़ एक्स्प्लोरर जैसे किसी संचिका प्रबंधक कार्यक्रम के जरिए भी हटा, मिटा या स्थानांतिरित कर सकता है।
यूनिक्स-जैसी प्रणालियों में प्रयोक्ता-क्षेत्र की प्रक्रियाएँ आमतौर पर सीधे संचिकाओं से नहीं उलझती हैं; प्रचालन प्रणाली एक पृथक्करण स्तर प्रदान करती है जिसकी वजह से प्रयोक्ता-क्षेत्र की ओर से संचिकाओं के साथ का लगभग सारा लेन-देन कठोर कड़ियों से होता है। कठोर कड़ियों के जरिए किसी संचिका का नाम दिया जा सकता है ; विशुद्ध रूप से प्रचालन प्रणाली में संचिकाओं के नाम नहीं होते हैं। उदाहरण के लिए प्रयोक्ता-क्षेत्र के कार्यक्रम किसी संचिका को मिटा नहीं सकते हैं, वे केवल उस संचिका की कड़ी को मिटा सकते हैं और यदि अष्ठि को यह पता लगता है कि इस संचिका की अब कोई और कड़ियाँ नहीं हैं, तो वह इस संचिका को मिटा सकता है। वास्तव में केवल अष्ठि ही संचिकाओं से लेन-देन करता है, पर प्रयोक्ता-क्षेत्र के अनुरोधों का संचिकाओं के जरिए इस तरह होता है कि प्रयोक्ता-क्षेत्र कार्यक्रमों को यह अज्ञात ही रहता है।
यूँ तो कार्यक्रमों का संचिकाओं के साथ का लेन-देन प्रचालन प्रणाली और संचिका प्रणाली के हिसाब से अलग अलग होता है पर मुख्यतः यह गतिविधियाँ आम हैं:
आधुनिक संगणक प्रणालियों में संचिकाओं तक पहुँचने के लिए आमतौर पर फ़ाइलनामों का इस्तेमाल किया जाता है। कुछ प्रचालन प्रणालियों में यह नाम संचिका से जुड़ा होता है। कुछ अन्य में संचिका स्वयं बेनाम होती है, पर नामित कड़ियाँ उसकी ओर इंगित करती हैं। इस मामले में प्रयोक्ता कड़ी को ही संचिका का नाम समझ सकता है, लेकिन यह वास्तव में सही नहीं होगा, खासतौर पर जब एक ही संचिका की एक से अधिक कड़ियाँ हों तब।
संचिकाएँ निर्देशिकाओं में हो सकती हैं। लेकिन बेहतर यह कहना होगा कि निर्देशिका के अंदर संचिकाओं की सूची या संचिकाओं की कड़ियों की सूची हो सकती है। इस परिभाषा के अंतर्गत यह समझना बहुत ज़रूरी है कि "संचिका" शब्द में निर्देशिकाएँ भी शामिल हैं। इससे निर्देशिकाओं के सोपान संभव होते हैं, अर्थात् निर्देशिकाओं के अंदर उपनिर्देशिकाएँ। जो नाम किसी निर्देशिका के अंदर किसी संचिका को संदर्भित करता है, उसे अनोखा होना ज़रूरी है। लेकिन कुछ प्रचालन प्रणालियों में नाम के साथ प्रकार भी निर्दिष्ट होता है जिसकी वजह से एक निर्देशिका में दो अलग अलग प्रकार की संचिकाएं एक ही नाम से संभव हैं जैसे कि एक ही नाम की एक निर्देशिका व एक संचिका।
जिन पर्यावरणों में संचिकाएँ नामित होती हैं, उनमें, संचिका के नाम व पथ की जोड़ी अनोखी होनी ज़रूरी है - कोई भी दो संचिकाओं का नाम व पथ दोनो किसी और संचिका के नाम व पथ से मेल नहीं खा सकते हैं। जहाँ संचिका बेनाम हो, नामित संदर्भ एक नामस्थान के अंतर्गत रहेंगे। अधिकतर बार किसी भी नामस्थान में मौजूद नाम ठीक एक या शून्य संचिकाओं को संदर्भित करेगा। लेकिन, कोई भी संचिका किसी नामस्थान में शून्य, एक या अधिक नामों से संदर्भित की जा सकती है।
अनुप्रयोग के प्रसंग के अनुसार, किसी भी संचिका या कड़ी के लिए उपयुक्त नाम किन्हीं खास अक्षरों से बनी होगी। संगणक प्रणाली पर निर्भर करता है कि यह नाम उपयुक्त है या नहीं। प्रारंभिक संगणक किसी संचिका के नाम में सीमित अक्षर व अंकों की अनुमति देते थे, लेकिन आधुनिक संगणक लंबे नाम रखने देते हैं जिनमें लगभग किसी भी क्रम में यूनिकोड अक्षर या यूनिकोड अंक हो सकते हैं, ताकि एक ही नज़र में संचिका का मकसद समझ आ जाए। कुछ संगणक प्रणालियाँ संचिका नामों में खाली स्थान की अनुमति देते हैं, कुछ नहीं। संचिका नामों की लघुदीर्घाक्षर संवेदनशीलता संचिका प्रणाली द्वारा निर्धारित होती है। यूनिक्स संचिका प्रणालियाँ आमतौर पर लघुदीर्घसंवेदी होती हैं और प्रयोक्ता-स्तरीय अनुप्रयोगों को ऐसी संचिकाएँ बनाने देती हैं जिनके अक्षरों में केवल लघु और दीर्घ का फ़र्क हो। माइक्रोसॉफ्ट विंडोज़ कई संचिका प्रणालियाँ प्रदान करता है, जिनमें लुघ-दीर्घ संवेदनशीलता की नीतियाँ अलग अलग हैं। यदि प्रयोक्ता निर्देशिका प्रविष्टिओं में संचिका नामों को बदलने के लिए डिस्क संपादक का इस्तेमाल करे तो प्रचलित एफ़एटी प्रणाली में कई संचिकाएँ हो सकती हैं जिनके नाम में केवल दीर्घ-लघु अक्षरों का ही फ़र्क हो। लेकिन, आमतौर पर प्रयोक्ता अनुप्रयोग इसकी अनुमति नहीं देते हैं।
अधिकतर संगणक, संचिकाओं को सोपान के आधार पर आयोजित करते हैं और इसके लिए फ़ोल्डर, निर्देशिका या कैटलाग का इस्तेमाल करते हैं। शब्द जो भी हो विचार एक ही है। हर फ़ोल्डर में कुछ संख्या में संचिकाएँ हो सकती हैं और उनमें अन्य फ़ोल्डर हो सकते हैं। इन अन्य फ़ोल्डरों को उपफ़ोल्डर कहते हैं। इनमें और संचिकाएँ व फ़ोल्डर हो सकते हैं, आदि-आदि, ऐसे कर के एक वृक्ष-रूपी ढाँचा निर्मित होता है जिसमें एक "गुरु फ़ोल्डर" या होता है जिसके अधीन कितने भी स्तर तक संचिकाएँ व फ़ोल्डर हो सकते हैं। फ़ोल्डरों के भी संचिकाओं की तरह नाम हो सकते हैं । फ़ोल्डरों के जरिए संचिकाओं को तार्किक तरीके से आयोजित करना सरल हो जाता है।
जब भी कोई संगणक फ़ोल्डरों का इस्तेमाल करता है तो हरेक संचिका व फ़ोल्डर का केवल अपना नाम ही नहीं अपितु एक पथ भी होता है जो यह दर्शाता है कि वह संचिका या फ़ोल्डर किस फ़ोल्डर या फ़ोल्डरों में मौजूद है। इस पथ में एक विशेष चिह्न - जैसे कि / - को जरिए संचिका या फ़ोल्डर नामों के बीच में लिखा जाता है। उदाहरण के लिए इस लेख में दिए उदाहरण में, /Payroll/Salaries/Managers यह दर्शाता है कि Managers नामक एक संचिका, Salaries नामक फ़ोल्डर में है, ौर यह फ़ोल्डर Payroll में है। संचिका और फ़ोल्डर के नामों के बीच में आगे झुकी लकीर है, सर्वोच्च या जड़ फ़ोल्डर का कोई नाम नहीं है, अतः नाम आगे झुकी लकीर से शूरू होता है ।
कई संगणक प्रणालियाँ संचिका नामों मे विस्तारों का इस्तेमाल करते हैं, इन्हें संचिका प्रकार भी कहा जाता है। विंडोज़ संगणकों में विस्तार संचिका के नाम के बाद एक बिंदु और बिंदु के आगे कुछ अक्षर का रूप लेता है, ये अक्षर संचिका के प्रकार की पहचान होते हैं। .txt विस्तार पाठ्य संचिका का पहचान है, .doc विस्तार किसी दस्तावेज़ का पहचान है, खासतौर पर माइक्रोसॉफ्ट वर्ड संचिका प्रारूप में; आदि इत्यादि। संगणक प्रणाली पर विस्तारों का इस्तेमाल होने पर भी, संगणक प्रणाली उन्हें किस हद तक पहचानता है और किस हद तक उनके अनुसार व्यवहार करता है, इसमें भी काफ़ी विविधता है, कुछ प्रणालियों में ये अनिवार्य हैं, जबकि कुछ और में इनके मौजूद होने से भी कोई फ़र्क नहीं पड़ता, ये नज़रंदाज़ कर दिए जाते हैं।
कई आधुनिक संगणक प्रणालियाँ संचिकाओं को नुकसान पहुँचने से रोकने के तरीके प्रदान करती है। जो संगणक एक से अधिक प्रयोक्ताओं की सुविधा देते हैं वे संचिका अनुमतियाँ भी लागू करते हैं जिनसे यह नियंत्रित किया जा सकता है कि कौन संचिकाएँ व फ़ोल्डर बना, मिटा या बदल सकता है और कौन नहीं। उदाहरण के लिए किसी प्रयोक्ता को एक संचिका को बदलने की अनुमति हो सकती है पर मिटाने की नहीं, या फिर संचिकाएँ व फ़ोल्डर बनाने की अनुमति हो सकती है पर मिटाने की नहीं। अनुमतियों के जरिए यह भी निर्धारित किया जा सकता है कि केवल कुछ ही प्रयोक्ता किसी संचिका या फ़ोल्डर की सामग्री देख सकें। अनुमतियों के जरिए संचिकाओं में मौजूद सामग्री के अवैध बदलाव या विनाश से बचाव होता है और निजी जानकारी को गोपनीय रखने के लिए अवैध प्रयोक्ताओं को कुछ संचिकाएँ देखने से रोका जा सकता है।
कई संगणकों में एक और बचाव विधि मौजूद होती है जिसे "केवल पठनीय चिह्न" कहते हैं। यह चिह्न लगे होने पर संचिको का निरीक्षण किया जा सकता है पर बदला नहीं जा सकता है। यह चिह्न विकट जानकारी के लिए लाभदायक होता है जिसे बदला या मिटाया नहीं जाना चाहिए, जैसे कि संगणक प्रणाली के आंतरिक पुर्ज़ों द्वारा प्रयुक्त कुछ विशेष संचिकाओं के लिए। कुछ प्रणालियाँ एक "छिपी हुई चिह्न" भी शामिल करती हैं, जो यह सुनिश्चित करता है कि संचिका अदृश्य हो जाए। इस चिह्न के जरिए संगणक प्रणाली ऐसी ज़रूरी प्रणाली संचिकाओं को छिपाती है, जिन्हें प्रयोक्ताओं द्वारा बदला नहीं जाना चाहिए।
उपरोक्त चर्चा में संचिका का वर्णन एक उच्च स्तरीय प्रचालन प्रणाली या प्रयोक्ता के लिए एक परिकल्पना के तौर पर हुआ है। लेकिन, किसी भी संचिका को वास्तव में काम लायक होने के लिए भौतिक रूप से उपस्थित होना आवश्यक है। अर्थात्, एक संचिका की अमूर्त अवधारणा को वास्तविक संगणक प्रणाली में वास्तविक भौतिक रूप में होना आवश्यक है, अन्यथा उसका आस्तित्व होना न होना बराबर है।
भौतिक रूप से अधिकतर संगणक संचिकाएँ किसी प्रकार के सामग्री भंडारण उपकरण में रखी जाती हैं। उदाहरण है हार्ड जिस्क, जिसके जरिए अधिकतर प्रचालन प्रणालियाँ चलती हैं। अधिकतर संचिकाएँ इन्हीं में रखी जाती हैं। 21वीं सदी के प्रारब्ध में हार्ड डिस्क सार्वाधिक उपलब्ध गैर वाष्पषील भंडारण उपकरण है। यदि संचिकाओं में केवल अस्थायी सामग्री ही हो तो उन्हें आरएएम में रखा जा सकता है।
यूनिक्स जैसी प्रचालन प्रणालियों में कई संचिकाओं का किसी भौतिक भंडारण उपकरण से सीधा वास्ता नहीं होता है: /dev/null इसका एक प्रमुख उदाहरण है, इसी तरह /dev, /proc और /sys के अंतरंगत मौजूद लगभग सभी संचिकाएँ भी इसी प्रकार की हैं। इनका प्रयोक्ता क्षेत्र में संचिकाओं की तरह प्रयोग किया जा सकता है। लेकिन ये आभासी संचिकाएँ हैं जो वास्तव में केवल प्रचालन प्रणाली की अष्ठि की वस्तुओं के तौर पर विद्यमान रहती हैं।
संगणक संचिकाओं को चुंबकीय पट्टयों में भंडारित किया जा सकता है। कुछ स्थितियों में संचिकाओं को अन्य माध्यमों में भी भंडारित किया जा सकता है जैसे कि लेखनीय काम्पैक्ट डिस्क, अंकीय बहुविद डिस्क, ज़िप ड्राइव, यूएसबी फ़्लैश ड्राइव आदि।
जब संगणक संचिकाओं में बहुत महत्वपूर्ण जानकारी होते है तो प्रतिलिपि प्रक्रिया के जरिए ऐसी स्थितियों को परिणामों से बचने की कोशिश की जाती है जिनमें संचिकाएँ नष्ट हो सकती हैं। संचिकाओं की प्रतिलिपि करने का मतलब बस यही है कि संचिकाओं की प्रतियाँ किसी अन्य स्थान पर बान के रखना ताकि यदि मूल संगणक को कुछ हो जाता है या वे गलती से मिट जाती हैं तो प्रति के जरिए उन्हें वापस पाया जा सके।
संचिकाओं की प्रति रखने के कई तरीके हैं। अधिकतर संगणक प्रणालियाँ सुविधात्मक कार्यक्रम प्रदान करते हैं जो कि प्रति रखने की प्रक्रिया में सुविधा प्रदान करते हैं, क्योंकि यदि बहुत सी संचिकाओं की प्रतियाँ रखनी हैं तो इसमें बहुत समय लग सकता है। संचिकाओं को अक्सर लेखनयोग्य सीडी या कार्ट्रिज टेपों जैसे हस्तांतरणीय माध्यमों में प्रतिलिपित किया जाता है। एक ही संगणक की दूसरी हार्ड डिस्क में संचिकाओं को प्रतिलिपित करने से एक डिस्क के खराब होने से तो बचाव हो जाता है पर यदि पूरे संगणक के खराब या नष्ट होने के जोखिम से बचाव करना है तो उन संचिकाओं की प्रतियाँ ऐसे माध्यम में करना ज़रूरी है जो इस संगणक से दूर ले जा के किसी सुरक्षित जगह पर भंडारित की जा सके।
दादा-बाप-बेटा प्रतिलिपि विधि स्वचालित रूप से तीन प्रतिलिपियाँ बनाती है, संचिका की सबसे पुरानी प्रति दादा संचिका होती है और बेटा मौजूदा प्रतिलिपि।
किस संगणक द्वारा संचिकाओं को आयोजित, नामित, भंडारित व परिवर्तित करने की प्रणाली को उसकी संचिका प्रणाली कहा जाता है। अधिकतर प्रचालन प्रणालियों में कम से कम एक संचिका प्रणाली होती है। कई प्रचालन प्रणालियों में कई संचिका प्रणालियाँ एक साथ चलाई जा सकती है। उदाहरण के लिए, नए एमएस विंडोज़ संगणकों पर एमएस-डॉस के पुराने एफ़एटी-शैली की संचिका प्रणालियाँ समर्थित हैं और साथ ही ताज़े विंडोज़ संस्करणों की प्रचलित संचिका प्रणाली एनटीएफ़एस भी चलती है। हर प्रणाली के अपने फ़ायदे नुकसान हैं। उदाहरण के लिए मानक एफ़एटी में केवल 8 अक्षर के संचिका नाम चलते हैं, जबकि एनटीएफ़एस में लंबे संचिका नाम संभव हैं जिनमें खाली स्थान भी हो सकते हैं। आप किसी संचिका को एनटीएफ़एस में Payroll records जैसा नाम दे सकते हैं लेकिन एफ़एटी में यह नाम कुछ payroll.dat जैसा ही हो सकता है ।
संचिका प्रबंधक कार्यक्रम सुविधादायक कार्यक्रम होते हैं जिनके जरिए संचिकाओं व फ़ोल्डरों को हिलाया, बनाया, मिटाया या पुनर्नामित किया जा सकता है, पर ये वास्तव में आपको संचिका की सामग्री को पढ़ने या सामग्री जोड़ने नहीं देते हैं। हर संगणक प्रणाली अपनी मूल संचिका प्रणाली के लिए कम से कम एक संचिका प्रबंधक प्रदान करता है। विंडोज़ में सबसे अधिक प्रयुक्त संचिका प्रबंधक कार्यक्रम विंडोज़ एक्स्प्लोरर है और मैक में यह फ़ाइंडर है। लिनक्स में नॉटिलस, कॉंक्वरर जैसे कई संचिका प्रबंधक हैं।
संचिका के लिए प्रयुक्त अंग्रेज़ी शब्द "फ़ाइल" का संगणक भंडारण के संदर्भ में प्रयोग 1952 से ही छिदी पत्तियों में संचित जानकारी के लिए शुरू हो गया था। प्रारंभिक प्रयोग में लोग अंतर्निहित तंत्रांश को ही फ़ाइल कहते थे। उदाहरण के लिए आईबीएम 350 की डिस्क ड्राइवों को "डिस्क फ़ाइल" कहा जाता था। 1962 के संगत समय साझा प्रणाली जैसी प्रणालियों में ऐसी संचिका प्रणालियाँ थीं जो एक ही संचय उपकरण पर कई "संचिकाएँ" प्रदर्शित करती थीं और इस तरह इस शब्द का आधुनिक उपयोग शुरू हुआ। सीटीएसएस के संचिका नामों में दो हिस्से थे, एक प्रयोक्ता-पठनीय "प्रधान नाम" और दूसरा "अप्रधान नाम" जो संचिका का प्रकार बताता था। यह आचार कई प्रचालन प्रणालियों द्वारा आज भी काम में लिया जाता है, इनमें माइक्रोसॉफ्ट विंडोज़ भी शामिल है। यूँ तो आजकल प्रयुक्त "रजिस्टर संचिका" संचिकाओं की प्रारंभिक परिकल्पना दर्शाती है, किंतु यह प्रायः लुप्त हो चुकी है।

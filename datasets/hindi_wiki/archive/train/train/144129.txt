तर्कद्वार या लॉजिक गेट वह युक्ति है जिसका आउटपुट उसके इनपुट पर उपस्थित वर्तमान संकेतों या पूर्व संकेतों का कोई लॉजिकल फलन हो। यह भौतिक युक्ति हो सकती है या कोई आदर्शीकृत युक्ति। आजकल अधिकतर अर्धचालक लॉजिक गेट प्रयोग किये जाते हैं किन्तु सिद्धान्ततः ये विद्युतचुम्बकीय रिले, तरल लॉजिक, दाब लॉजिक, प्रकाशिक लॉजिक, अणुओं आदि से भी बनाये जा सकते हैं।
बूलीय लॉजिक से जिन अल्गोरिथ्म का वर्णन किया जा सकता है उन्हें इन भौतिक गेटों से उन अल्गोरिद्मों को साकार रूप भी दिया जा सकता है ।
जिस प्रकार एक दरवाजा दो अवस्थाओं - 'खुला या बन्द' में हो सकता है, उसी तरह लॉजिक गेट का आउटपुट भी 'हाई या लो' हो सकता है।लॉजिक गेट, ऐण्ड और ऑर जैसे सरल भी हो सकते हैं और एक कम्प्युटर जितना जटिल भी। 
डायोड का उपयोग करके बनाया गया लॉजिक गेट सबसे सरल लॉजिक गेट है। किन्तु इसके केवल AND तथा OR गेट ही बनाये जा सकते हैं, 'इन्वर्टर' नहीं बनाया जा सकता। अतः इसे एक 'अपूर्ण लॉजिक परिवार' कह सकते हैं। इन्वर सहित सभी लॉजिक गेट बनाने में सक्षम होने के लिये किसी प्रकार के प्रवर्धक की जरूरत होगी। इसलिये 'सम्पूर्ण लॉजिक परिवार' बनाने के लिये रिले, निर्वात नलिका या ट्रांजिस्टर का प्रयोग अपरिहार्य है। बाइपोलर ट्रांजिस्टरों का प्रयोग करके बना लॉजिक परिवार रेजिस्टर-ट्रांजिस्टर लॉजिक कहलाता है। आरम्भिक एकीकृत परिपथों में इसी का उपयोग किया गया था। इसके बाद विभिन्न दृष्टियों से सुधार करते हुए डायोड-ट्रांजिस्टर लॉजिक और ट्रांजिस्टर-ट्रांजिस्टर लॉजिक आये। अब लगभग सब जगह ट्रांजिस्टर का स्थान मॉसफेट ने ले लिया है जिससे आईसी कम स्थान घेरती है और काम करने के लिये कम उर्जा क्षय होती है। वर्तमान में प्रयुक्त लॉजिक परिवार का नाम कम्प्लिमेन्टरी मेटल-आक्साइड-सेमिकंडक्टर है।
तीन अवस्था वाले लॉजिक गेट के आउटपुट की तीन अलग-अलग अवस्थाएँ होती हैं। ये हैं - हाई, लो और हाई इम्पीडेंस । लॉजिक की दृष्टि से हाई इम्पीडेंस अवस्था की कोई भूमिका नहीं है । किन्तु अपने हाई इम्पीडेंस वाली अवस्था के कारण इन युक्तियों का उपयोग डेटा बस पर विभिन्न युक्तियों से डेटा भेजने के लिये किया जाता है। जो युक्ति बस को डेटा भेज रही होती है, उसको छोड़कर उस बस से जुड़ि अन्य सभी युक्तियों को 'हाई इम्पीडेंस स्टेट' में कर दिया जाता है। इस प्रकार ये अन्य युक्तियाँ एक प्रकार से बस से जुड़ी होकर भी उससे अलग हैं क्योंकि बस और इनके आउटपुट के बीच 'हाई इम्पीडेंस' मौजूद है।
तर्कसंगत द्वार दो प्रकार के होते हैं - संयोजन तर्क तथा अनुक्रमिक तर्क।
संयोजन तर्क का आउटपुट उसके इनपुटों की वर्तमान अवस्था पर ही केवल निर्भर करता है न कि उनकी पहले की अवस्था या अवस्थाओं पर। दूसरे शब्दों में कह सकते हैं कि इनमें स्मृति नहीं होती। 
इसके कुछ उदाहरण हैं - बाइनरी ऐडर, इनकोडर, डिकोडर आदि।
लॉजिक द्वारों का उपयोग आंकडा-भण्डारण के लिये भी किया जा सकता है। इसके लिये लैच परिपथ या 'फ्लिप-फ्लॉप' का उपयोग किया जाता है। जब कई फ्लिप-फ्लॉप को समान्तर में जोड़ देते हैं तो इसमें बहु-बिट डेटा स्टोर किया जा सकता है। इसे रजिस्टर कहते हैं। फ्लिप-फ्लॉपों से युक्त प्रणाली में एक प्रकार की 'स्मृति' मौजूद है। इसी लिये इनसे कम्प्युटर की मेमोरी बनायी जाती है। कम्प्युटर की स्मृति कई प्रकार की होतीं हैं।
केवल NOR या केवल NAND का प्रयोग करके किसी भी अन्य लॉजिक गेट का काम लिया जा सकता है। इसलिये इन लॉजिक द्वारों को 'यूनिवर्सल लॉजिक गेट' कहते हैं। केवल AND, या केवल OR, या केवल NOT गेटों का प्रयोग करके इच्छानुसार कोई भी लॉजिक फलन बनाने सम्भव नहीं है। इसलिये AND, OR और NOT गेट 'युनिवर्सल लॉजिक गेट' नहीं हैं।
